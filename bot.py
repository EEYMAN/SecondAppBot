import os
import asyncio
from flask import Flask, send_from_directory
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from waitress import serve

API_TOKEN = '8178668402:AAHhnaR4idzlp1Nglg9FmsrIM8uci4OydW4'
WEBAPP_URL = "https://appbot-production-c01e.up.railway.app"  # Railway-–¥–æ–º–µ–Ω

# === Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
flask_app = Flask(__name__, static_folder="web")

@flask_app.route("/")
def index():
    return send_from_directory("web", "index.html")

# === Telegram-–±–æ—Ç ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è ===
locales = {
    'ru': {
        'welcome': "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ê–Ω–∞–ª–∏—Ç–∏–∫ Sigma.",
        'terminal_hint': "–ö–Ω–æ–ø–∫–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∏–∂–µ üëá",
        'terminal_button': "üî• –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞ Sigma üî•"
    },
    'uk': {
        'welcome': "üëã –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –ê–Ω–∞–ª—ñ—Ç–∏–∫ Sigma.",
        'terminal_hint': "–ö–Ω–æ–ø–∫–∞ —Ç–µ—Ä–º—ñ–Ω–∞–ª—É –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∏–∂—á–µ üëá",
        'terminal_button': "üî• –í—ñ–¥–∫—Ä–∏—Ç–∏ –±–æ—Ç–∞ Sigma üî•"
    },
    'en': {
        'welcome': "üëã Welcome! Click the button below to open the Analyst Sigma.",
        'terminal_hint': "Terminal button is available below üëá",
        'terminal_button': "üî• Open bot Sigma üî•"
    }
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_locale(message: types.Message) -> dict:
    lang_code = (message.from_user.language_code or 'ru')[:2]
    return locales.get(lang_code, locales['en'])

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —É—á—ë—Ç–æ–º –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
def get_persistent_keyboard(loc: dict):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(KeyboardButton(
        text=loc['terminal_button'],
        web_app=WebAppInfo(url=WEBAPP_URL)
    ))
    return keyboard

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    loc = get_locale(message)
    keyboard = get_persistent_keyboard(loc)
    await message.answer(loc['welcome'], reply_markup=keyboard)

@dp.message_handler()
async def always_show_keyboard(message: types.Message):
    loc = get_locale(message)
    keyboard = get_persistent_keyboard(loc)
    await message.answer(loc['terminal_hint'], reply_markup=keyboard)

# === –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ Flask –∏ Telegram ===
async def main():
    loop = asyncio.get_event_loop()
    loop.run_in_executor(None, lambda: serve(flask_app, host="0.0.0.0", port=int(os.environ.get("PORT", 8080))))
    await dp.start_polling()

if __name__ == '__main__':
    asyncio.run(main())

